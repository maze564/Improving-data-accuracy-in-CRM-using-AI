import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report

# Step 1: Load the dataset
file_path = 'opportunity_history.csv'  # Make sure this file is in the same folder
df = pd.read_csv(file_path)

print("âœ… Dataset Loaded")
print("ðŸ“Œ Columns:", df.columns.tolist())
print(df.head())

# Step 2: Encode categorical columns
label_encoders = {}
for col in df.select_dtypes(include='object').columns:
    df[col] = df[col].astype(str)
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le

print("âœ… Categorical columns encoded")

# Step 3: Impute missing values
imputer = SimpleImputer(strategy='most_frequent')
df_imputed = pd.DataFrame(imputer.fit_transform(df), columns=df.columns)

# Step 4: Set the target column
target_column = 'IsWon'

X = df_imputed.drop(target_column, axis=1)
y = df_imputed[target_column]

# Step 5: Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Step 6: Train the model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# Step 7: Evaluate the model
print("\nâœ… Model Trained")
print("ðŸŽ¯ Accuracy:", accuracy_score(y_test, y_pred))
print("\nðŸ“„ Classification Report:\n", classification_report(y_test, y_pred))
